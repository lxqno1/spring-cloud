# 安全认证
spring.security.user.name=root
spring.security.user.password=123456

#声明本服务在注册中心展示的名字、也是在网关访问时定位服务的名字
spring.application.name=spring-cloud-eureka
# 关闭注册中心的自我保护机制，防止已关闭的实例无法从注册中心剔除
#eureka.server.enable-self-preservation=false
#在windows下的hosts文件中增加了  127.0.0.1  swapping1
eureka.instance.hostname=swapping2
#swapping1
server.port=8012

#是否将自己作为服务注册到注册中心，默认为true，false不能将自己注册到自己,
#如果有多个服务注册中心的微服务的话，可以将这个设置为true，表示可以将注册中心1注册到注册中心2中
eureka.client.register-with-eureka=true
#表示是否从eureka注册中心中获取注册信息,默认为true
eureka.client.fetch-registry=false
#注册中心的交互地址，设置多个地址可以用,分隔  查询服务和注册服务都需要依赖这个地址
#关于设置注册中心这么关键的服务，如果是单点话，遇到故障就是毁灭性的。
#在一个分布式系统中，服务注册中心是最重要的基础部分，理应随时处于可以提供服务的状态。为了维持其可用性，使用集群是很好的解决方案
#所以 在一个分布式系统中，设置最少两个服务注册中心是最基本的
#eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/
eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@swapping1:8011/eureka/
#,http://swapping3:8031/eureka/
